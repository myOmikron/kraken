[package]
name = "kraken"
version = "0.3.5"
edition = "2021"
authors = ["Niklas Pfister <git@omikron.dev>"]
license = "AGPL-3.0"
repository = "https://github.com/myOmikron/kraken-project"
description = "The core component of kraken-project"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
path = "./src/main.rs"
name = "kraken"
required-features = ["bin"]

[lib]
path = "./src/lib.rs"
name = "kraken"

[dependencies]
# Important!
#
# When adding new dependencies, make sure to make them optional and add them to the "bin" feature
# if they are only used in parts of the code, that are annotated with #[cfg(feature = "bin")].
#
# This will speed up the compile time when using kraken as a library.
# As well as not forcing rorm's postgres-only feature on users or requiring protobuf-compiler to compile.

kraken-proto = { path = "../kraken-proto", optional = true }

# Very common sub-dependency which is included to pin its version
parking_lot = "=0.12.2"

# Webframework
actix-web = { version = "~4", optional = true }
# Extensions for actix-web
actix-toolbox = { version = "~0.13", features = ["ws", "logging", "session-postgres-only"], optional = true }
actix-files = { version = "~0.6", optional = true }
# Webauthn library
webauthn-rs = { version = "~0.5", features = ["danger-allow-state-serialisation"] }

# openapi swagger
utoipa = { version = "~4", features = ["actix_extras", "repr", "chrono", "uuid", "openapi_extensions", "preserve_order"] }
# openapi swagger boilerplat generation
utoipa-swagger-ui = { version = "~7", features = ["actix-web"], optional = true }

# Hashing
argon2 = { version = "~0.5", features = ["std"], optional = true }
sha2 = { version = "~0.10", optional = true } # Required in oauth for pkce

# Cli parser
clap = { version = "~4", features = ["derive"], optional = true }
# Read passwords from cli
rpassword = { version = "~7", optional = true }

# Logging facade
log = { version = "~0.4" }

# Serialization
serde = { version = "~1", features = ["derive"] }
serde_repr = { version = "~0.1" }
toml = { version = "~0.8", optional = true }
serde_json = { version = "~1" }
serde_urlencoded = { version = "~0.7", optional = true } # required for oauth
# Time library
chrono = { version = ">=0.4.20", default-features = false, features = ["serde"] }
# Bytes abstractions for network usage
bytes = { version = "~1", optional = true }
bytestring = { version = "~1", optional = true }
# Base64 decoder and encoder
base64 = { version = "~0.22", optional = true }
# ip networks
ipnet = { version = "~2", features = ["serde"], optional = true }
# Uuid v4 generation
uuid = { version = "~1", features = ["serde", "v4"] }

# Async runtime
tokio = { version = ">=1.23.1", features = ["rt-multi-thread", "sync", "macros"], optional = true }
# Async abstractions
futures = { version = "~0.3", optional = true }

# Utilities for RNG
rand = { version = "~0.8", optional = true }

# gRPC implementation
tonic = { version = "~0.11", features = ["transport", "tls"], optional = true }
# codegenerator
prost = { version = "~0.12", optional = true }
prost-types = { version = "~0.12", optional = true }

# error management
thiserror = { version = "~1", optional = true }

# ORM
rorm = { version = "~0.6", default-features = false, features = ["tokio", "rustls", "cli", "uuid", "postgres-only", "chrono"], optional = true }
ipnetwork = { version = "~0.20", features = ["serde"] }

# API for dehashed
dehashed-rs = { version = "~0.5", features = ["tokio", "utoipa"] }

# TLS
rcgen = { version = "~0.13", features = ["x509-parser"], optional = true }
url = { version = "~2", features = ["serde"] } # Parsing ip / domain when filling subject_alt_names

# Image processing
image = { version = "~0.25", optional = true }

[features]
rorm-main = []
bin = [
    "dep:kraken-proto",
    "dep:actix-web",
    "dep:actix-toolbox",
    "dep:actix-files",
    "dep:utoipa-swagger-ui",
    "dep:argon2",
    "dep:sha2",
    "dep:clap",
    "dep:rpassword",
    "dep:toml",
    "dep:serde_urlencoded",
    "dep:bytes",
    "dep:bytestring",
    "dep:base64",
    "dep:ipnet",
    "dep:tokio",
    "dep:futures",
    "dep:rand",
    "dep:tonic",
    "dep:prost",
    "dep:prost-types",
    "dep:thiserror",
    "dep:rorm",
    "dep:rcgen",
    "dep:image",
]
